<?php

namespace App\Http\Controllers\Api\V2\Front\ListingFrontC;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Route;
use LaravelJsonApi\Core\Document\Error;
use LaravelJsonApi\Core\Responses\ErrorResponse;
use LaravelJsonApi\Core\Responses\DataResponse;
use LaravelJsonApi\Laravel\Http\Controllers\JsonApiController;
use Illuminate\Support\Facades\Storage;
use App\Enums\ItemStatus;







use LaravelJsonApi\Contracts\Store\Store;
use LaravelJsonApi\Contracts\Routing\Route as JsonApiRoute;


use App\Models\Review;

use App\Models\Reviewreply;

use App\Models\Favorite;

use App\Models\Listing;
use App\Models\User;

use App\Models\Reservation;

use App\Models\Onlinestore;



use App\Models\Billiard;
use App\Models\Boxing;
use App\Models\Diving  ;
use App\Models\Football  ;
use App\Models\Golf  ;
use App\Models\Hunting  ;
use App\Models\Musculation  ;
use App\Models\Surf  ;
use App\Models\Tennis  ;



use App\Models\Audio  ;
use App\Models\Camera  ;
use App\Models\Charger  ;
use App\Models\Drone  ;
use App\Models\Gaming  ;
use App\Models\Laptop  ;
use App\Models\Lighting  ;
use App\Models\Printer  ;
use App\Models\Router  ;
use App\Models\Tablette  ;


use App\Models\Eclairage  ;
use App\Models\Mobilier  ;
use App\Models\Photographie  ;
use App\Models\Sonorisation  ;
use App\Models\Tente  ;


use App\Models\Clothes  ;
use App\Models\Jewelry  ;


use App\Models\Apartment  ;
use App\Models\Bureaux  ;
use App\Models\Magasin  ;
use App\Models\Maison  ;
use App\Models\Riad  ;
use App\Models\Terrain  ;
use App\Models\Villa  ;


use App\Models\Activity  ;
use App\Models\Livre  ;
use App\Models\Musical  ;


use App\Models\Furniture  ;
use App\Models\Houseappliance  ;


use App\Models\Electricaltool  ;
use App\Models\Ladder  ;
use App\Models\Mechanicaltool  ;
use App\Models\Powertool  ;
use App\Models\Pressurewasher  ;



use App\Models\Service  ;



use App\Models\Boat  ;
use App\Models\Camion  ;
use App\Models\Caravan  ;
use App\Models\Car  ;
use App\Models\Engin  ;
use App\Models\Moto  ;
use App\Models\Scooter  ;
use App\Models\Taxiaeroport  ;
use App\Models\Transportation  ;
use App\Models\Velo  ;




use App\Models\Billiardsimg;
use App\Models\Boxingsimg;
use App\Models\Divingsimg;
use App\Models\Footballsimg;
use App\Models\Golfsimg;
use App\Models\Huntingsimg;
use App\Models\Musculationsimg;
use App\Models\Surfsimg;
use App\Models\Tennisimg;

use App\Models\Audiosimg;
use App\Models\Camerasimg;
use App\Models\Chargersimg;
use App\Models\Dronesimg;
use App\Models\Gamingsimg;
use App\Models\Laptopsimg;
use App\Models\Lightingsimg;
use App\Models\Printersimg;
use App\Models\Routersimg;
use App\Models\Tablettesimg;

use App\Models\Eclairagesimg;
use App\Models\Mobiliersimg;
use App\Models\Photographiesimg;
use App\Models\Sonorisationsimg;
use App\Models\Tentesimg;

use App\Models\Clothesimg;
use App\Models\Jewelrysimg;

use App\Models\Apartmentsimg;
use App\Models\Bureauxsimg;
use App\Models\Magasinsimg;
use App\Models\Maisonsimg;
use App\Models\Riadsimg;
use App\Models\Terrainsimg;
use App\Models\Villasimg;

use App\Models\Activitiesimg;
use App\Models\Livresimg;
use App\Models\Musicalsimg;

use App\Models\Furnituresimg;
use App\Models\Houseappliancesimg;

use App\Models\Electricaltoolsimg;
use App\Models\Laddersimg;
use App\Models\Mechanicaltoolsimg;
use App\Models\Powertoolsimg;
use App\Models\Pressurewashersimg;

use App\Models\Servicesimg;

use App\Models\Boatsimg;
use App\Models\Camionsimg;
use App\Models\Caravansimg;
use App\Models\Carsimg;
use App\Models\Enginsimg;
use App\Models\Motosimg;
use App\Models\Scootersimg;
use App\Models\Taxiaeroportsimg;
use App\Models\Transportationsimg;
use App\Models\Velosimg;

use App\Models\Generaleinfo;






class ListingFrontController extends JsonApiController
{



    private function getIdOnly($listing)

    {
        $result = ['id' => null]; // Initialize the result with default value

        switch ($listing->category) {
            case 'billiard':
                $billiard = Billiard::where('url', $listing->url)->first();
                if ($billiard) {
                    $listing->billiard_id = $billiard->id;
                    $result['id'] = $billiard->id;
                }
                break;

            case 'boxing':
                $boxing = Boxing::where('url', $listing->url)->first();
                if ($boxing) {
                    $listing->boxing_id = $boxing->id;
                    $result['id'] = $boxing->id;
                }
                break;

            case 'diving':
                $diving = Diving::where('url', $listing->url)->first();
                if ($diving) {
                    $listing->diving_id = $diving->id;
                    $result['id'] = $diving->id;
                }
                break;

            case 'football':
                $football = Football::where('url', $listing->url)->first();
                if ($football) {
                    $listing->football_id = $football->id;
                    $result['id'] = $football->id;
                }
                break;

            case 'golf':
                $golf = Golf::where('url', $listing->url)->first();
                if ($golf) {
                    $listing->golf_id = $golf->id;
                    $result['id'] = $golf->id;
                }
                break;

            case 'hunting':
                $hunting = Hunting::where('url', $listing->url)->first();
                if ($hunting) {
                    $listing->hunting_id = $hunting->id;
                    $result['id'] = $hunting->id;
                }
                break;

            case 'gym':
                $musculation = Musculation::where('url', $listing->url)->first();
                if ($musculation) {
                    $listing->musculation_id = $musculation->id;
                    $result['id'] = $musculation->id;
                }
                break;

            case 'surf':
                $surf = Surf::where('url', $listing->url)->first();
                if ($surf) {
                    $listing->surf_id = $surf->id;
                    $result['id'] = $surf->id;
                }
                break;

            case 'tennis':
                $tennis = Tennis::where('url', $listing->url)->first();
                if ($tennis) {
                    $listing->tennis_id = $tennis->id;
                    $result['id'] = $tennis->id;
                }
                break;

            case 'audio':
                $audio = Audio::where('url', $listing->url)->first();
                if ($audio) {
                    $listing->audio_id = $audio->id;
                    $result['id'] = $audio->id;
                }
                break;

            case 'cameras':
                $camera = Camera::where('url', $listing->url)->first();
                if ($camera) {
                    $listing->camera_id = $camera->id;
                    $result['id'] = $camera->id;
                }
                break;

            case 'chargers':
                $charger = Charger::where('url', $listing->url)->first();
                if ($charger) {
                    $listing->charger_id = $charger->id;
                    $result['id'] = $charger->id;
                }
                break;

            case 'drones':
                $drone = Drone::where('url', $listing->url)->first();
                if ($drone) {
                    $listing->drone_id = $drone->id;
                    $result['id'] = $drone->id;
                }
                break;

            case 'gaming':
                $gaming = Gaming::where('url', $listing->url)->first();
                if ($gaming) {
                    $listing->gaming_id = $gaming->id;
                    $result['id'] = $gaming->id;
                }
                break;

            case 'laptops':
                $laptop = Laptop::where('url', $listing->url)->first();
                if ($laptop) {
                    $listing->laptop_id = $laptop->id;
                    $result['id'] = $laptop->id;
                }
                break;

            case 'lighting':
                $lighting = Lighting::where('url', $listing->url)->first();
                if ($lighting) {
                    $listing->lighting_id = $lighting->id;
                    $result['id'] = $lighting->id;
                }
                break;

            case 'printers':
                $printer = Printer::where('url', $listing->url)->first();
                if ($printer) {
                    $listing->printer_id = $printer->id;
                    $result['id'] = $printer->id;
                }
                break;

            case 'routers':
                $router = Router::where('url', $listing->url)->first();
                if ($router) {
                    $listing->router_id = $router->id;
                    $result['id'] = $router->id;
                }
                break;

            case 'tablets':
                $tablette = Tablette::where('url', $listing->url)->first();
                if ($tablette) {
                    $listing->tablette_id = $tablette->id;
                    $result['id'] = $tablette->id;
                }
                break;

            case 'eclairage':
                $eclairage = Eclairage::where('url', $listing->url)->first();
                if ($eclairage) {
                    $listing->eclairage_id = $eclairage->id;
                    $result['id'] = $eclairage->id;
                }
                break;

            case 'mobilier':
                $mobilier = Mobilier::where('url', $listing->url)->first();
                if ($mobilier) {
                    $listing->mobilier_id = $mobilier->id;
                    $result['id'] = $mobilier->id;
                }
                break;

            case 'photography':
                $photographie = Photographie::where('url', $listing->url)->first();
                if ($photographie) {
                    $listing->photographie_id = $photographie->id;
                    $result['id'] = $photographie->id;
                }
                break;

            case 'sound-systems':
                $sonorisation = Sonorisation::where('url', $listing->url)->first();
                if ($sonorisation) {
                    $listing->sonorisation_id = $sonorisation->id;
                    $result['id'] = $sonorisation->id;
                }
                break;

            case 'tents':
                $tente = Tente::where('url', $listing->url)->first();
                if ($tente) {
                    $listing->tente_id = $tente->id;
                    $result['id'] = $tente->id;
                }
                break;

            case 'clothes':
                $clothes = Clothes::where('url', $listing->url)->first();
                if ($clothes) {
                    $listing->clothes_id = $clothes->id;
                    $result['id'] = $clothes->id;
                }
                break;

            case 'jewelry':
                $jewelry = Jewelry::where('url', $listing->url)->first();
                if ($jewelry) {
                    $listing->jewelry_id = $jewelry->id;
                    $result['id'] = $jewelry->id;
                }
                break;

            case 'apartments':
                $apartment = Apartment::where('url', $listing->url)->first();
                if ($apartment) {
                    $listing->apartment_id = $apartment->id;
                    $result['id'] = $apartment->id;
                }
                break;

            case 'offices':
                $bureaux = Bureaux::where('url', $listing->url)->first();
                if ($bureaux) {
                    $listing->bureaux_id = $bureaux->id;
                    $result['id'] = $bureaux->id;
                }
                break;

            case 'shops':
                $magasin = Magasin::where('url', $listing->url)->first();
                if ($magasin) {
                    $listing->magasin_id = $magasin->id;
                    $result['id'] = $magasin->id;
                }
                break;

            case 'houses':
                $maison = Maison::where('url', $listing->url)->first();
                if ($maison) {
                    $listing->maison_id = $maison->id;
                    $result['id'] = $maison->id;
                }
                break;

            case 'riads':
                $riad = Riad::where('url', $listing->url)->first();
                if ($riad) {
                    $listing->riad_id = $riad->id;
                    $result['id'] = $riad->id;
                }
                break;

            case 'lands':
                $terrain = Terrain::where('url', $listing->url)->first();
                if ($terrain) {
                    $listing->terrain_id = $terrain->id;
                    $result['id'] = $terrain->id;
                }
                break;

            case 'villas':
                $villa = Villa::where('url', $listing->url)->first();
                if ($villa) {
                    $listing->villa_id = $villa->id;
                    $result['id'] = $villa->id;
                }
                break;

            case 'activities':
                $activity = Activity::where('url', $listing->url)->first();
                if ($activity) {
                    $listing->activity_id = $activity->id;
                    $result['id'] = $activity->id;
                }
                break;

            case 'books':
                $livre = Livre::where('url', $listing->url)->first();
                if ($livre) {
                    $listing->livre_id = $livre->id;
                    $result['id'] = $livre->id;
                }
                break;

            case 'musical':
                $musical = Musical::where('url', $listing->url)->first();
                if ($musical) {
                    $listing->musical_id = $musical->id;
                    $result['id'] = $musical->id;
                }
                break;

            case 'furniture':
                $furniture = Furniture::where('url', $listing->url)->first();
                if ($furniture) {
                    $listing->furniture_id = $furniture->id;
                    $result['id'] = $furniture->id;
                }
                break;

            case 'home-appliances':
                $houseappliance = Houseappliance::where('url', $listing->url)->first();
                if ($houseappliance) {
                    $listing->houseappliance_id = $houseappliance->id;
                    $result['id'] = $houseappliance->id;
                }
                break;

            case 'electrical-tools':
                $electricaltool = Electricaltool::where('url', $listing->url)->first();
                if ($electricaltool) {
                    $listing->electricaltool_id = $electricaltool->id;
                    $result['id'] = $electricaltool->id;
                }
                break;

            case 'ladders':
                $ladder = Ladder::where('url', $listing->url)->first();
                if ($ladder) {
                    $listing->ladder_id = $ladder->id;
                    $result['id'] = $ladder->id;
                }
                break;

            case 'mechanical-tools':
                $mechanicaltool = Mechanicaltool::where('url', $listing->url)->first();
                if ($mechanicaltool) {
                    $listing->mechanicaltool_id = $mechanicaltool->id;
                    $result['id'] = $mechanicaltool->id;
                }
                break;

            case 'power-tools':
                $powertool = Powertool::where('url', $listing->url)->first();
                if ($powertool) {
                    $listing->powertool_id = $powertool->id;
                    $result['id'] = $powertool->id;
                }
                break;

            case 'pressure-washers':
                $pressurewasher = Pressurewasher::where('url', $listing->url)->first();
                if ($pressurewasher) {
                    $listing->pressurewasher_id = $pressurewasher->id;
                    $result['id'] = $pressurewasher->id;
                }
                break;



            case 'boats':
                $boat = Boat::where('url', $listing->url)->first();
                if ($boat) {
                    $listing->boat_id = $boat->id;
                    $result['id'] = $boat->id;
                }
                break;

            case 'trucks':
                $camion = Camion::where('url', $listing->url)->first();
                if ($camion) {
                    $listing->camion_id = $camion->id;
                    $result['id'] = $camion->id;
                }
                break;

            case 'caravans':
                $caravan = Caravan::where('url', $listing->url)->first();
                if ($caravan) {
                    $listing->caravan_id = $caravan->id;
                    $result['id'] = $caravan->id;
                }
                break;

            case 'cars':
                $car = Car::where('url', $listing->url)->first();
                if ($car) {
                    $listing->car_id = $car->id;
                    $result['id'] = $car->id;
                }
                break;

            case 'engins':
                $engin = Engin::where('url', $listing->url)->first();
                if ($engin) {
                    $listing->engin_id = $engin->id;
                    $result['id'] = $engin->id;
                }
                break;

            case 'motorcycles':
                $moto = Moto::where('url', $listing->url)->first();
                if ($moto) {
                    $listing->moto_id = $moto->id;
                    $result['id'] = $moto->id;
                }
                break;

            case 'scooters':
                $scooter = Scooter::where('url', $listing->url)->first();
                if ($scooter) {
                    $listing->scooter_id = $scooter->id;
                    $result['id'] = $scooter->id;
                }
                break;

            case 'airport-taxis':
                $taxiaeroport = Taxiaeroport::where('url', $listing->url)->first();
                if ($taxiaeroport) {
                    $listing->taxiaeroport_id = $taxiaeroport->id;
                    $result['id'] = $taxiaeroport->id;
                }
                break;

            case 'transportation':
                $transportation = Transportation::where('url', $listing->url)->first();
                if ($transportation) {
                    $listing->transportation_id = $transportation->id;
                    $result['id'] = $transportation->id;
                }
                break;

            case 'bicycles':
                $velo = Velo::where('url', $listing->url)->first();
                if ($velo) {
                    $listing->velo_id = $velo->id;
                    $result['id'] = $velo->id;
                }
                break;

            default:
                $result['id'] = null; // Return null if no match
        }

        return $result; // Return the result containing id only
    }


    public function getListing(Request $request, $category, $url)
    {








        $authuser = Auth::user();











        if ($authuser) {


            $favorites = Favorite::where('user_id', $authuser->id)->get();







            $billiard_ids = array_filter($favorites->pluck('billiard_id')->toArray());
            $boxing_ids = array_filter($favorites->pluck('boxing_id')->toArray());
            $diving_ids = array_filter($favorites->pluck('diving_id')->toArray());
            $football_ids = array_filter($favorites->pluck('football_id')->toArray());
            $golf_ids = array_filter($favorites->pluck('golf_id')->toArray());
            $hunting_ids = array_filter($favorites->pluck('hunting_id')->toArray());
            $musculation_ids = array_filter($favorites->pluck('musculation_id')->toArray());
            $surf_ids = array_filter($favorites->pluck('surf_id')->toArray());
            $tennis_ids = array_filter($favorites->pluck('tennis_id')->toArray());
            $audio_ids = array_filter($favorites->pluck('audio_id')->toArray());
            $camera_ids = array_filter($favorites->pluck('camera_id')->toArray());
            $charger_ids = array_filter($favorites->pluck('charger_id')->toArray());
            $drone_ids = array_filter($favorites->pluck('drone_id')->toArray());
            $gaming_ids = array_filter($favorites->pluck('gaming_id')->toArray());
            $laptop_ids = array_filter($favorites->pluck('laptop_id')->toArray());
            $lighting_ids = array_filter($favorites->pluck('lighting_id')->toArray());
            $printer_ids = array_filter($favorites->pluck('printer_id')->toArray());
            $router_ids = array_filter($favorites->pluck('router_id')->toArray());
            $tablette_ids = array_filter($favorites->pluck('tablette_id')->toArray());
            $eclairage_ids = array_filter($favorites->pluck('eclairage_id')->toArray());
            $mobilier_ids = array_filter($favorites->pluck('mobilier_id')->toArray());
            $photographie_ids = array_filter($favorites->pluck('photographie_id')->toArray());
            $sonorisation_ids = array_filter($favorites->pluck('sonorisation_id')->toArray());
            $tente_ids = array_filter($favorites->pluck('tente_id')->toArray());
            $clothes_ids = array_filter($favorites->pluck('clothes_id')->toArray());
            $jewelry_ids = array_filter($favorites->pluck('jewelry_id')->toArray());
            $apartment_ids = array_filter($favorites->pluck('apartment_id')->toArray());
            $bureaux_ids = array_filter($favorites->pluck('bureaux_id')->toArray());
            $magasin_ids = array_filter($favorites->pluck('magasin_id')->toArray());
            $maison_ids = array_filter($favorites->pluck('maison_id')->toArray());
            $riad_ids = array_filter($favorites->pluck('riad_id')->toArray());
            $terrain_ids = array_filter($favorites->pluck('terrain_id')->toArray());
            $villa_ids = array_filter($favorites->pluck('villa_id')->toArray());
            $activity_ids = array_filter($favorites->pluck('activity_id')->toArray());
            $livre_ids = array_filter($favorites->pluck('livre_id')->toArray());
            $musical_ids = array_filter($favorites->pluck('musical_id')->toArray());
            $furniture_ids = array_filter($favorites->pluck('furniture_id')->toArray());
            $houseappliance_ids = array_filter($favorites->pluck('houseappliance_id')->toArray());
            $electricaltool_ids = array_filter($favorites->pluck('electricaltool_id')->toArray());
            $ladder_ids = array_filter($favorites->pluck('ladder_id')->toArray());
            $mechanicaltool_ids = array_filter($favorites->pluck('mechanicaltool_id')->toArray());
            $powertool_ids = array_filter($favorites->pluck('powertool_id')->toArray());
            $pressurewasher_ids = array_filter($favorites->pluck('pressurewasher_id')->toArray());
            $service_ids = array_filter($favorites->pluck('service_id')->toArray());
            $boat_ids = array_filter($favorites->pluck('boat_id')->toArray());
            $camion_ids = array_filter($favorites->pluck('camion_id')->toArray());
            $caravan_ids = array_filter($favorites->pluck('caravan_id')->toArray());
            $car_ids = array_filter($favorites->pluck('car_id')->toArray());
            $engin_ids = array_filter($favorites->pluck('engin_id')->toArray());
            $moto_ids = array_filter($favorites->pluck('moto_id')->toArray());
            $scooter_ids = array_filter($favorites->pluck('scooter_id')->toArray());
            $taxiaeroport_ids = array_filter($favorites->pluck('taxiaeroport_id')->toArray());
            $transportation_ids = array_filter($favorites->pluck('transportation_id')->toArray());
            $velo_ids = array_filter($favorites->pluck('velo_id')->toArray());




            $favoriteIds = array_merge(
                $billiard_ids,
                $boxing_ids,
                $diving_ids,
                $football_ids,
                $golf_ids,
                $hunting_ids,
                $musculation_ids,
                $surf_ids,
                $tennis_ids,
                $audio_ids,
                $camera_ids,
                $charger_ids,
                $drone_ids,
                $gaming_ids,
                $laptop_ids,
                $lighting_ids,
                $printer_ids,
                $router_ids,
                $tablette_ids,
                $eclairage_ids,
                $mobilier_ids,
                $photographie_ids,
                $sonorisation_ids,
                $tente_ids,
                $clothes_ids,
                $jewelry_ids,
                $apartment_ids,
                $bureaux_ids,
                $magasin_ids,
                $maison_ids,
                $riad_ids,
                $terrain_ids,
                $villa_ids,
                $activity_ids,
                $livre_ids,
                $musical_ids,
                $furniture_ids,
                $houseappliance_ids,
                $electricaltool_ids,
                $ladder_ids,
                $mechanicaltool_ids,
                $powertool_ids,
                $pressurewasher_ids,
                $service_ids,
                $boat_ids,
                $camion_ids,
                $caravan_ids,
                $car_ids,
                $engin_ids,
                $moto_ids,
                $scooter_ids,
                $taxiaeroport_ids,
                $transportation_ids,
                $velo_ids
            );


        }













        switch ($category) {



            case 'billiard':


                        $listingcategory = Billiard::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();



                        $userStore = Onlinestore::where('user_id', $user->id)->first();



                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,







                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'table_brand' => $listingcategory->table_brand,
                                        'condition' => $listingcategory->condition,
                                        'balls_design' => $listingcategory->balls_design,
                                        'bridge_stick' => $listingcategory->bridge_stick,
                                        'chalk' => $listingcategory->chalk,
                                        'other_information' => $listingcategory->scoreboards,
                                        'more_details' => $listingcategory->more_details,

                                    ],

                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,


                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {
                                                $replyUser = User::find($reply->user_id);


                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,

                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Billiardsimg::where('billiard_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];



                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place



                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();



                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,


                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),



                                    'recentlistings' => Billiard::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        $user = User::where('id', $recentlisting->user_id)->first();

                                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                                        return [

                                            'attributes' => [

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'billiard',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                            'picture' => $recentlisting->picture,


                                            'averageRating' => $averageRating,

                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),

                                            'phone' => $recentlisting->phone,


                                            'seller' => [
                                                'name' => $userStore ? $userStore->name : $user->name,
                                                'id' => $user->id,

                                                'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                'created_at' => $user->created_at->toIso8601String(),

                                            ],


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Billiard::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'billiard',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,


                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Billiard::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews



                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'billiard',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Billiard::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'billiard',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Billiard::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'billiard',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Billiard::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'billiard',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Billiard::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'billiard',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Billiard::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'billiard',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Billiard::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'billiard',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Billiard::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'billiard',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Billiard::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'billiard',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),










                                ],

                        ];



                        // Ensure JSON:API compliance
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' key if user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        return response()->json($responseData);





                break;





            case 'boxing':


                        $listingcategory = Boxing::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,


                                    'specifications' => [
                                    'brand_name' => $listingcategory->brand_name,
                                    'ring_dimensions' => $listingcategory->ring_dimensions,
                                    'padding_thickness' => $listingcategory->padding_thickness,
                                    'boxing_clothing' => $listingcategory->boxing_clothing,
                                    'other_equipment' => $listingcategory->other_equipment,
                                    'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {
                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Boxingsimg::where('boxing_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place




                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),






                                    'recentlistings' => Boxing::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,



                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'boxing',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),

                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Boxing::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'category' => 'boxing',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,


                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Boxing::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'boxing',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Boxing::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'boxing',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Boxing::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'boxing',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Boxing::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'boxing',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Boxing::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'boxing',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Boxing::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'boxing',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Boxing::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'boxing',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Boxing::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'boxing',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Boxing::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'boxing',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),













                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);





                break;






            case 'diving':




                        $listingcategory = Diving::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'brand_name' => $listingcategory->brand_name,
                                        'material' => $listingcategory->material,
                                        'other_equipment' => $listingcategory->other_equipment,
                                        'more_details' => $listingcategory->more_details,

                                    ],



                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Divingsimg::where('diving_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],

                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place





                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),





                                    'recentlistings' => Diving::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,

                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'diving',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,


                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),

                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Diving::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'category' => 'diving',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,


                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Diving::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'diving',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Diving::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'diving',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Diving::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'diving',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Diving::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'diving',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Diving::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'diving',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Diving::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'diving',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Diving::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'diving',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Diving::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'diving',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Diving::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'diving',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),











                                ],

                        ];



                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);





                break;







            case 'football':





                        $listingcategory = Football::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();


                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,

                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,

                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,


                                    'specifications' => [
                                        'type' => $listingcategory->type,
                                        'equipment' => $listingcategory->equipment,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Footballsimg::where('football_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place





                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),




                                    'recentlistings' => Football::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'football',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),

                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Football::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'category' => 'football',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,


                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Football::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'football',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Football::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'football',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Football::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'football',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Football::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'football',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Football::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'football',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Football::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'football',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Football::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'football',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Football::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'football',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Football::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'football',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),








                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);






                break;







            case 'golf':



                        $listingcategory = Golf::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'clothing' => $listingcategory->clothing,
                                        'golf_cars' => $listingcategory->golf_cars,
                                        'other_equipment' => $listingcategory->other_equipment,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Golfsimg::where('golf_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place






                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();



                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),





                                    'recentlistings' => Golf::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {
                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,

                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'golf',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),
                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Golf::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'category' => 'golf',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,


                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Golf::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'golf',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Golf::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'golf',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Golf::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'golf',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Golf::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'golf',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Golf::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'golf',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Golf::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'golf',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Golf::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'golf',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Golf::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'golf',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Golf::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'golf',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),












                                ],

                        ];



                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);





                break;








            case 'hunting':



                        $listingcategory = Hunting::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,

                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,

                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,


                                    'specifications' => [
                                        'bow_arrow' => $listingcategory->bow_arrow,
                                        'crossbow' => $listingcategory->crossbow,
                                        'decoy' => $listingcategory->decoy,
                                        'game_call' => $listingcategory->game_call,
                                        'binoculars' => $listingcategory->binoculars,
                                        'clothing' => $listingcategory->clothing,
                                        'equipment' => $listingcategory->equipment,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Huntingsimg::where('hunting_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place






                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),




                                    'recentlistings' => Hunting::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,

                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'hunting',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),
                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Hunting::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'category' => 'hunting',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Hunting::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'hunting',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Hunting::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'hunting',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Hunting::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'hunting',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Hunting::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'hunting',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Hunting::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'hunting',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Hunting::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'hunting',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Hunting::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'hunting',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Hunting::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'hunting',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Hunting::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'hunting',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),












                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);






                break;







            case 'gym':



                        $listingcategory = Musculation::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'brand_name' => $listingcategory->brand_name,
                                        'arms' => $listingcategory->arms,
                                        'back' => $listingcategory->back,
                                        'shoulders' => $listingcategory->shoulders,
                                        'glutes' => $listingcategory->glutes,
                                        'legs' => $listingcategory->legs,
                                        'chest' => $listingcategory->chest,
                                        'abs' => $listingcategory->abs,
                                        'cardio_machines' => $listingcategory->cardio_machines,
                                        'dumbbells' => $listingcategory->dumbbells,

                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Musculationsimg::where('musculation_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place




                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),





                                    'recentlistings' => Musculation::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'gym',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Musculation::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews



                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'category' => 'gym',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Musculation::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'gym',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Musculation::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'gym',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Musculation::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'gym',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Musculation::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'gym',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Musculation::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'gym',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Musculation::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'gym',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Musculation::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {
                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'gym',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Musculation::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'gym',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Musculation::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'gym',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),














                                ],

                        ];



                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);





                break;








            case 'surf':


                        $listingcategory = Surf::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,

                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,

                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'surf_category' => $listingcategory->surf_category,
                                        'board_types' => $listingcategory->board_types,
                                        'board_size' => $listingcategory->board_size,
                                        'wetsuits' => $listingcategory->wetsuits,
                                        'surf_other' => $listingcategory->surf_other,
                                        'more_details' => $listingcategory->more_details,

                                    ],



                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Surfsimg::where('surf_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place






                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),





                                    'recentlistings' => Surf::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,

                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'surf',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),

                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Surf::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews



                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'category' => 'surf',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Surf::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'surf',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Surf::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'surf',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Surf::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'surf',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Surf::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'surf',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Surf::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'surf',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Surf::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'surf',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Surf::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'surf',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Surf::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'surf',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Surf::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'surf',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),











                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);






                break;







            case 'tennis':


                        $listingcategory = Tennis::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'terrain_dimensions' => $listingcategory->terrain_dimensions,
                                        'brand' => $listingcategory->brand,
                                        'clothing' => $listingcategory->clothing,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Tennisimg::where('tennis_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place





                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),






                                    'recentlistings' => Tennis::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'tennis',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Tennis::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews



                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'category' => 'tennis',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Tennis::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tennis',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Tennis::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tennis',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Tennis::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tennis',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Tennis::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tennis',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Tennis::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tennis',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Tennis::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tennis',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Tennis::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tennis',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Tennis::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tennis',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Tennis::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tennis',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),










                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);






                break;







            case 'audio':


                        $listingcategory = Audio::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'audio_type' => $listingcategory->audio_type,
                                        'sound_quality' => $listingcategory->sound_quality,
                                        'connectivity' => $listingcategory->connectivity,
                                        'max_wireless_range' => $listingcategory->max_wireless_range,
                                        'battery_life' => $listingcategory->battery_life,
                                        'charging_time' => $listingcategory->charging_time,
                                        'condition' => $listingcategory->condition,
                                        'compatibility' => $listingcategory->compatibility,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Audiosimg::where('audio_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place




                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),







                                    'recentlistings' => Audio::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,

                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'audio',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),

                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Audio::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews



                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'category' => 'audio',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Audio::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'audio',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Audio::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'audio',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Audio::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'audio',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Audio::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'audio',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Audio::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'audio',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Audio::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'audio',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Audio::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'audio',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Audio::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'audio',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Audio::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'audio',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),











                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);






                break;







            case 'cameras':



                        $listingcategory = Camera::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'photo_size' => $listingcategory->photo_size,
                                        'sensor_size' => $listingcategory->sensor_size,
                                        'image_stabilization' => $listingcategory->image_stabilization,
                                        'shutter_speed' => $listingcategory->shutter_speed,
                                        'exposure_control' => $listingcategory->exposure_control,
                                        'image_resolution' => $listingcategory->image_resolution,
                                        'condition' => $listingcategory->condition,
                                        'connectivity' => $listingcategory->connectivity,
                                        'memory' => $listingcategory->memory,
                                        'lens' => $listingcategory->lens,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Camerasimg::where('camera_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place




                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),






                                    'recentlistings' => Camera::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'cameras',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),

                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Camera::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews



                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'category' => 'cameras',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Camera::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'cameras',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Camera::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'cameras',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Camera::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'cameras',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Camera::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'cameras',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Camera::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'cameras',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Camera::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'cameras',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Camera::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'cameras',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Camera::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'cameras',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Camera::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'cameras',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),











                                ],

                        ];



                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);




                break;






            case 'chargers':



                        $listingcategory = Charger::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,


                                    'specifications' => [
                                        'compatibility' => $listingcategory->compatibility,
                                        'number_of_ports' => $listingcategory->number_of_ports,
                                        'length' => $listingcategory->length,
                                        'input_voltage' => $listingcategory->input_voltage,
                                        'wattage' => $listingcategory->wattage,
                                        'condition' => $listingcategory->condition,
                                        'connector_type' => $listingcategory->connector_type,
                                        'amperage' => $listingcategory->amperage,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Chargersimg::where('charger_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place



                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),







                                    'recentlistings' => Charger::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'chargers',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),

                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Charger::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'category' => 'chargers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Charger::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'chargers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Charger::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'chargers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Charger::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'chargers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Charger::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'chargers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Charger::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'chargers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Charger::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'chargers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Charger::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'chargers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Charger::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'chargers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Charger::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'chargers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),












                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);






                break;






            case 'drones':



                        $listingcategory = Drone::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,

                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,

                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'flight_time' => $listingcategory->flight_time,
                                        'battery_life' => $listingcategory->battery_life,
                                        'condition' => $listingcategory->condition,
                                        'video_resolution' => $listingcategory->video_resolution,
                                        'connectivity' => $listingcategory->connectivity,
                                        'battery_capacity' => $listingcategory->battery_capacity,
                                        'memory' => $listingcategory->memory,
                                        'image_resolution' => $listingcategory->image_resolution,
                                        'included_components' => $listingcategory->included_components,
                                        'remote_control' => $listingcategory->remote_control,
                                        'max_distance' => $listingcategory->max_distance,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Dronesimg::where('drone_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place


                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),







                                    'recentlistings' => Drone::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,

                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'drones',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),

                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Drone::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews



                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'category' => 'drones',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Drone::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'drones',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Drone::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'drones',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Drone::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'drones',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Drone::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'drones',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Drone::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'drones',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Drone::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'drones',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Drone::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'drones',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Drone::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'drones',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Drone::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'drones',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),












                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);






                break;









            case 'gaming':



                        $listingcategory = Gaming::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'storage' => $listingcategory->storage,
                                        'connectivity' => $listingcategory->connectivity,
                                        'ports' => $listingcategory->ports,
                                        'online_services' => $listingcategory->online_services,
                                        'condition' => $listingcategory->condition,
                                        'games' => $listingcategory->games,
                                        'controllers' => $listingcategory->controllers,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Gamingsimg::where('gaming_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place






                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),




                                    'recentlistings' => Gaming::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'gaming',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),

                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Gaming::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'category' => 'gaming',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Gaming::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'gaming',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Gaming::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'gaming',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Gaming::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'gaming',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Gaming::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'gaming',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Gaming::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'gaming',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Gaming::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'gaming',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Gaming::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'gaming',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Gaming::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'gaming',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Gaming::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'gaming',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),











                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);



                break;







            case 'laptops':






                        $listingcategory = Laptop::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,


                                    'specifications' => [
                                        'ram' => $listingcategory->ram,
                                        'graphics_card' => $listingcategory->graphics_card,
                                        'operating_system' => $listingcategory->operating_system,
                                        'number_ports' => $listingcategory->number_ports,
                                        'battery_life' => $listingcategory->battery_life,
                                        'drive_storage' => $listingcategory->drive_storage,
                                        'resolution' => $listingcategory->resolution,
                                        'weight' => $listingcategory->weight,
                                        'screen_size' => $listingcategory->screen_size,
                                        'cpu' => $listingcategory->cpu,
                                        'condition' => $listingcategory->condition,
                                        'more_details' => $listingcategory->more_details,

                                    ],



                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Laptopsimg::where('laptop_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place



                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),






                                    'recentlistings' => Laptop::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,

                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'laptops',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Laptop::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'laptops',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Laptop::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'laptops',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Laptop::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'laptops',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Laptop::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'laptops',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Laptop::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'laptops',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Laptop::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'laptops',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Laptop::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'laptops',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Laptop::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'laptops',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Laptop::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'laptops',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Laptop::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'laptops',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),








                                ],

                        ];




                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);








                break;








            case 'lighting':



                        $listingcategory = Lighting::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,

                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,

                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,


                                    'specifications' => [
                                        'connectivity' => $listingcategory->connectivity,
                                        'included_accessories' => $listingcategory->included_accessories,
                                        'condition' => $listingcategory->condition,
                                        'color_temperature' => $listingcategory->color_temperature,
                                        'compatibility' => $listingcategory->compatibility,
                                        'more_details' => $listingcategory->more_details,

                                    ],

                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Lightingsimg::where('lighting_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place






                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();



                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),




                                    'recentlistings' => Lighting::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'lighting',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),

                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Lighting::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews



                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'category' => 'lighting',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Lighting::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'lighting',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Lighting::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'lighting',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Lighting::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'lighting',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Lighting::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'lighting',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Lighting::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'lighting',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Lighting::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'lighting',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Lighting::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'lighting',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Lighting::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'lighting',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Lighting::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'lighting',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),










                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);



                break;








            case 'printers':



                        $listingcategory = Printer::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,

                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,

                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'print_speed' => $listingcategory->print_speed,
                                        'print_resolution' => $listingcategory->print_resolution,
                                        'connectivity' => $listingcategory->connectivity,
                                        'paper_size' => $listingcategory->paper_size,
                                        'compatible' => $listingcategory->compatible,
                                        'condition' => $listingcategory->condition,
                                        'input_sheets' => $listingcategory->input_sheets,
                                        'print_media' => $listingcategory->print_media,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Printersimg::where('printer_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place





                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();



                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),






                                    'recentlistings' => Printer::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'printers',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Printer::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'printers',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Printer::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'printers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Printer::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'printers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Printer::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'printers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Printer::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'printers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Printer::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'printers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Printer::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'printers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Printer::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'printers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Printer::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'printers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Printer::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'printers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),










                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);



                break;






            case 'routers':


                        $listingcategory = Router::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,


                                    'specifications' => [
                                        'gbps_speed' => $listingcategory->gbps_speed,
                                        'wireless' => $listingcategory->wireless,
                                        'frequency' => $listingcategory->frequency,
                                        'connectivity' => $listingcategory->connectivity,
                                        'antennas' => $listingcategory->antennas,
                                        'condition' => $listingcategory->condition,
                                        'compatible' => $listingcategory->compatible,
                                        'signal_coverage' => $listingcategory->signal_coverage,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Routersimg::where('router_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place




                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),






                                    'recentlistings' => Router::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,

                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'routers',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Router::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews



                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'routers',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Router::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'routers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Router::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'routers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Router::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'routers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Router::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'routers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Router::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'routers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Router::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'routers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Router::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'routers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Router::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'routers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Router::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'routers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),








                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);





                break;







            case 'tablets':


                        $listingcategory = Tablette::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,

                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,

                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,


                                    'specifications' => [
                                        'operating_system' => $listingcategory->operating_system,
                                        'ram' => $listingcategory->ram,
                                        'storage' => $listingcategory->storage,
                                        'display_size' => $listingcategory->display_size,
                                        'display_resolution' => $listingcategory->display_resolution,
                                        'connectivity' => $listingcategory->connectivity,
                                        'condition' => $listingcategory->condition,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Tablettesimg::where('tablette_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place





                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),






                                    'recentlistings' => Tablette::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {
                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,

                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'tablets',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Tablette::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews



                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tablets',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Tablette::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tablets',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Tablette::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tablets',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Tablette::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tablets',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Tablette::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tablets',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Tablette::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tablets',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Tablette::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tablets',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Tablette::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tablets',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Tablette::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tablets',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Tablette::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tablets',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),








                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);





                break;







            case 'eclairage':


                        $listingcategory = Eclairage::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,

                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,

                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'brand_name' => $listingcategory->brand_name,
                                        'size' => $listingcategory->size,
                                        'voltage' => $listingcategory->voltage,
                                        'chandeliers' => $listingcategory->chandeliers,
                                        'lamps' => $listingcategory->lamps,
                                        'light_fixtures' => $listingcategory->light_fixtures,
                                        'projectors' => $listingcategory->projectors,
                                        'leds' => $listingcategory->leds,
                                        'power_source' => $listingcategory->power_source,
                                        'light_source' => $listingcategory->light_source,
                                        'light_color' => $listingcategory->light_color,
                                        'lighting_method' => $listingcategory->lighting_method,
                                        'controller' => $listingcategory->controller,
                                        'other' => $listingcategory->other,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Eclairagesimg::where('eclairage_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place


                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),








                                    'recentlistings' => Eclairage::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,

                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'eclairage',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Eclairage::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'category' => 'eclairage',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Eclairage::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'eclairage',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Eclairage::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'eclairage',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Eclairage::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'eclairage',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Eclairage::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'eclairage',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Eclairage::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'eclairage',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Eclairage::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'eclairage',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Eclairage::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'eclairage',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Eclairage::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'eclairage',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Eclairage::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'eclairage',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),









                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);




                break;







            case 'mobilier':



                        $listingcategory = Mobilier::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,


                                    'specifications' => [
                                        'material' => $listingcategory->material,
                                        'theme' => $listingcategory->theme,
                                        'plant_decorations' => $listingcategory->plant_decorations,
                                        'light_decorations' => $listingcategory->light_decorations,
                                        'festive_decorations' => $listingcategory->festive_decorations,
                                        'others' => $listingcategory->others,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Mobiliersimg::where('mobilier_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place



                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),







                                    'recentlistings' => Mobilier::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [


                                                'phone' => $recentlisting->phone,

                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'mobilier',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Mobilier::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'category' => 'mobilier',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Mobilier::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'mobilier',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Mobilier::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'mobilier',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Mobilier::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'mobilier',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Mobilier::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'mobilier',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Mobilier::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'mobilier',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Mobilier::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'mobilier',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Mobilier::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'mobilier',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Mobilier::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'mobilier',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Mobilier::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'mobilier',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),








                                ],

                        ];

                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);




                break;







            case 'photography':



                        $listingcategory = Photographie::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,


                                    'specifications' => [
                                        'size' => $listingcategory->size,
                                        'battery' => $listingcategory->battery,
                                        'brand_name' => $listingcategory->brand_name,
                                        'camera' => $listingcategory->camera,
                                        'sensor' => $listingcategory->sensor,
                                        'angle' => $listingcategory->angle,
                                        'lcd' => $listingcategory->lcd,
                                        'other_equipment' => $listingcategory->other_equipment,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Photographiesimg::where('photographie_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place



                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),







                                    'recentlistings' => Photographie::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,

                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'photography',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Photographie::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'photography',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Photographie::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'photography',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Photographie::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'photography',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Photographie::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'photography',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Photographie::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'photography',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Photographie::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'photography',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Photographie::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'photography',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Photographie::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'photography',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Photographie::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'photography',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Photographie::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'photography',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),









                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);



                break;






            case 'sound-systems':


                $listingcategory = Sonorisation::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'brand_name' => $listingcategory->brand_name,
                                        'size' => $listingcategory->size,
                                        'connectivity' => $listingcategory->connectivity,
                                        'fastener_type' => $listingcategory->fastener_type,
                                        'power_source' => $listingcategory->power_source,
                                        'output_power' => $listingcategory->output_power,
                                        'number_of_channels' => $listingcategory->number_of_channels,
                                        'compatibility' => $listingcategory->compatibility,
                                        'power_watts' => $listingcategory->power_watts,
                                        'power_type' => $listingcategory->power_type,
                                        'battery' => $listingcategory->battery,
                                        'weight' => $listingcategory->weight,
                                        'microphone' => $listingcategory->microphone,
                                        'mixage_table' => $listingcategory->mixage_table,
                                        'amplifier' => $listingcategory->amplifier,
                                        'cables_connectors' => $listingcategory->cables_connectors,
                                        'speaker' => $listingcategory->speaker,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Sonorisationsimg::where('sonorisation_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place



                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),






                                    'recentlistings' => Sonorisation::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,

                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'sound-systems',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Sonorisation::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'sound-systems',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Sonorisation::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'sound-systems',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Sonorisation::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'sound-systems',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Sonorisation::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'sound-systems',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Sonorisation::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'sound-systems',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Sonorisation::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'sound-systems',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Sonorisation::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'sound-systems',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Sonorisation::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'sound-systems',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Sonorisation::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'sound-systems',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Sonorisation::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'sound-systems',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),










                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);





                break;







            case 'tents':



                        $listingcategory = Tente::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,

                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,

                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,


                                    'specifications' => [
                                        'material' => $listingcategory->material,
                                        'style' => $listingcategory->style,
                                        'fabric_type' => $listingcategory->fabric_type,
                                        'other_equipment' => $listingcategory->other_equipment,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Tentesimg::where('tente_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place



                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),







                                    'recentlistings' => Tente::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [


                                                'phone' => $recentlisting->phone,

                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'tents',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Tente::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews



                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tents',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Tente::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tents',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Tente::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tents',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Tente::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tents',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Tente::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tents',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Tente::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tents',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Tente::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tents',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Tente::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tents',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Tente::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tents',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Tente::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'tents',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),









                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);



                break;






            case 'clothes':



                        $listingcategory = Clothes::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,

                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,

                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'number_of_pieces' => $listingcategory->number_of_pieces,
                                        'closure_type' => $listingcategory->closure_type,
                                        'strap_type' => $listingcategory->strap_type,
                                        'number_of_pockets' => $listingcategory->number_of_pockets,
                                        'heel_height' => $listingcategory->heel_height,
                                        'condition' => $listingcategory->condition,
                                        'color' => $listingcategory->color,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Clothesimg::where('clothes_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place



                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),






                                    'recentlistings' => Clothes::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,

                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'clothes',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Clothes::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'clothes',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Clothes::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'clothes',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Clothes::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'clothes',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Clothes::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'clothes',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Clothes::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'clothes',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Clothes::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'clothes',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Clothes::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'clothes',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Clothes::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'clothes',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Clothes::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'clothes',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Clothes::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'clothes',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),










                                ],

                        ];

                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);




                break;







            case 'jewelry':


                        $listingcategory = Jewelry::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();


                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,

                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,

                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'type' => $listingcategory->type,
                                        'materials' => $listingcategory->materials,
                                        'occasion' => $listingcategory->occasion,
                                        'chain_type' => $listingcategory->chain_type,
                                        'gem_type' => $listingcategory->gem_type,
                                        'color' => $listingcategory->color,
                                        'closure_type' => $listingcategory->closure_type,
                                        'condition' => $listingcategory->condition,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Jewelrysimg::where('jewelry_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place



                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),






                                    'recentlistings' => Jewelry::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [


                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'jewelry',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Jewelry::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews



                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'jewelry',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Jewelry::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'jewelry',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Jewelry::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'jewelry',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Jewelry::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'jewelry',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Jewelry::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'jewelry',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Jewelry::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'jewelry',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Jewelry::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'jewelry',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Jewelry::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'jewelry',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Jewelry::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'jewelry',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Jewelry::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'jewelry',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),









                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);




                break;






            case 'apartments':



                        $listingcategory = Apartment::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,

                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,

                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'rooms' => $listingcategory->rooms,
                                        'living_rooms' => $listingcategory->living_rooms,
                                        'bathrooms' => $listingcategory->bathrooms,
                                        'bedrooms' => $listingcategory->bedrooms,
                                        'security_system' => $listingcategory->security_system,
                                        'equipped_kitchen' => $listingcategory->equipped_kitchen,
                                        'service' => $listingcategory->service,
                                        'facilities' => $listingcategory->facilities,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Apartmentsimg::where('apartment_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place




                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),





                                    'recentlistings' => Apartment::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'apartments',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Apartment::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews



                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'apartments',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Apartment::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'apartments',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Apartment::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'apartments',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Apartment::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'apartments',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Apartment::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'apartments',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Apartment::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'apartments',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Apartment::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {
                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'apartments',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Apartment::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {
                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'apartments',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Apartment::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'apartments',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Apartment::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'apartments',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),








                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);



                break;







            case 'offices':




                        $listingcategory = Bureaux::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,


                                    'specifications' => [
                                        'property_type' => $listingcategory->property_type,
                                        'security' => $listingcategory->security,
                                        'soil_type' => $listingcategory->soil_type,
                                        'parking' => $listingcategory->parking,
                                        'bathrooms' => $listingcategory->bathrooms,
                                        'conference_room' => $listingcategory->conference_room,
                                        'building_size' => $listingcategory->building_size,
                                        'lighting' => $listingcategory->lighting,
                                        'capacity' => $listingcategory->capacity,
                                        'bail_type' => $listingcategory->bail_type,
                                        'security_deposit' => $listingcategory->security_deposit,
                                        'office_taxes' => $listingcategory->office_taxes,
                                        'facilities' => $listingcategory->facilities,
                                        'amenities' => $listingcategory->amenities,
                                        'services' => $listingcategory->services,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Bureauxsimg::where('bureaux_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place





                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),





                                    'recentlistings' => Bureaux::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [


                                                'phone' => $recentlisting->phone,

                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'offices',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Bureaux::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'offices',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Bureaux::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'offices',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Bureaux::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'offices',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Bureaux::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'offices',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Bureaux::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'offices',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Bureaux::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'offices',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Bureaux::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'offices',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Bureaux::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'offices',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Bureaux::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'offices',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Bureaux::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'offices',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),








                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);



                break;






            case 'shops':



                        $listingcategory = Magasin::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,

                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,

                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,


                                    'specifications' => [
                                        'property_type' => $listingcategory->property_type,
                                        'surface_area' => $listingcategory->surface_area,
                                        'capacity' => $listingcategory->capacity,
                                        'offices_number' => $listingcategory->offices_number,
                                        'individual_offices' => $listingcategory->individual_offices,
                                        'floors' => $listingcategory->floors,
                                        'garage' => $listingcategory->garage,
                                        'approved_uses' => $listingcategory->approved_uses,
                                        'facility_size' => $listingcategory->facility_size,
                                        'operating_days' => $listingcategory->operating_days,
                                        'lighting' => $listingcategory->lighting,
                                        'transports' => $listingcategory->transports,
                                        'facilities' => $listingcategory->facilities,
                                        'amenities' => $listingcategory->amenities,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Magasinsimg::where('magasin_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place



                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),







                                    'recentlistings' => Magasin::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [


                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'shops',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Magasin::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews



                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'shops',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Magasin::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'shops',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Magasin::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'shops',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Magasin::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'shops',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Magasin::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'shops',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Magasin::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'shops',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Magasin::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'shops',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Magasin::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'shops',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Magasin::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'shops',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Magasin::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'shops',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),








                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);



                break;






            case 'houses':


                        $listingcategory = Maison::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();


                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'security_system' => $listingcategory->security_system,
                                        'rooms' => $listingcategory->rooms,
                                        'living_rooms' => $listingcategory->living_rooms,
                                        'bedrooms' => $listingcategory->bedrooms,
                                        'bathrooms' => $listingcategory->bathrooms,
                                        'floors' => $listingcategory->floors,
                                        'amenities' => $listingcategory->amenities,
                                        'facilities' => $listingcategory->facilities,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Maisonsimg::where('maison_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place





                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),





                                    'recentlistings' => Maison::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'houses',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Maison::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews



                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'houses',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Maison::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'houses',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Maison::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'houses',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Maison::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'houses',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Maison::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'houses',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Maison::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'houses',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Maison::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'houses',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Maison::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'houses',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Maison::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'houses',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Maison::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'houses',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),









                                ],

                        ];

                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);




                break;






            case 'riads':




                        $listingcategory = Riad::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();


                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,



                                    'specifications' => [
                                        'entire_home' => $listingcategory->entire_home,
                                        'doorkeeper' => $listingcategory->doorkeeper,
                                        'security_system' => $listingcategory->security_system,
                                        'equipped_kitchen' => $listingcategory->equipped_kitchen,
                                        'wifi' => $listingcategory->wifi,
                                        'tv' => $listingcategory->tv,
                                        'heating' => $listingcategory->heating,
                                        'furniture' => $listingcategory->furniture,
                                        'balcony' => $listingcategory->balcony,
                                        'air_conditioner' => $listingcategory->air_conditioner,
                                        'washing_machine' => $listingcategory->washing_machine,
                                        'pool' => $listingcategory->pool,
                                        'rooms' => $listingcategory->rooms,
                                        'living_rooms' => $listingcategory->living_rooms,
                                        'surface' => $listingcategory->surface,
                                        'floors' => $listingcategory->floors,
                                        'bedrooms' => $listingcategory->bedrooms,
                                        'bathrooms' => $listingcategory->bathrooms,
                                        'garden' => $listingcategory->garden,
                                        'terrace' => $listingcategory->terrace,
                                        'housekeeping' => $listingcategory->housekeeping,
                                        'dishwasher' => $listingcategory->dishwasher,
                                        'barbecue' => $listingcategory->barbecue,
                                        'refrigerator' => $listingcategory->refrigerator,
                                        'microwave' => $listingcategory->microwave,
                                        'outdoor_furniture' => $listingcategory->outdoor_furniture,
                                        'private_entrance' => $listingcategory->private_entrance,
                                        'hammam' => $listingcategory->hammam,
                                        'jacuzzi' => $listingcategory->jacuzzi,
                                        'gym' => $listingcategory->gym,
                                        'architecture' => $listingcategory->architecture,
                                        'view' => $listingcategory->view,
                                        'restaurant' => $listingcategory->restaurant,
                                        'spa' => $listingcategory->spa,
                                        'airport' => $listingcategory->airport,
                                        'smoking_rooms' => $listingcategory->smoking_rooms,
                                        'more_details' => $listingcategory->more_details,

                                    ],





                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Riadsimg::where('riad_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place





                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),





                                    'recentlistings' => Riad::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [


                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                            'seller' => [
                                                'name' => $userStore ? $userStore->name : $user->name,
                                                'id' => $user->id,

                                                'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                'created_at' => $user->created_at->toIso8601String(),

                                            ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'riads',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Riad::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews



                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'riads',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Riad::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'riads',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Riad::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'riads',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Riad::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'riads',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Riad::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'riads',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Riad::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'riads',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Riad::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'riads',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Riad::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'riads',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Riad::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'riads',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Riad::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'riads',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),










                                ],

                        ];

                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);



                break;





            case 'lands':




                        $listingcategory = Terrain::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();


                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'property_type' => $listingcategory->property_type,
                                        'property_subtype' => $listingcategory->property_subtype,
                                        'total_lot_size' => $listingcategory->total_lot_size,
                                        'land_valuation' => $listingcategory->land_valuation,
                                        'total_rating' => $listingcategory->total_rating,
                                        'road_access' => $listingcategory->road_access,
                                        'slope_description' => $listingcategory->slope_description,
                                        'property_usage' => $listingcategory->property_usage,
                                        'annual_taxes' => $listingcategory->annual_taxes,
                                        'deeded_acres' => $listingcategory->deeded_acres,
                                        'leased_acres' => $listingcategory->leased_acres,
                                        'elevation' => $listingcategory->elevation,
                                        'vegetation' => $listingcategory->vegetation,
                                        'nearby_usage' => $listingcategory->nearby_usage,
                                        'topography' => $listingcategory->topography,
                                        'zoning' => $listingcategory->zoning,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Terrainsimg::where('terrain_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place




                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),





                                    'recentlistings' => Terrain::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [


                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'lands',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Terrain::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'lands',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Terrain::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'lands',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Terrain::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'lands',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Terrain::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'lands',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Terrain::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'lands',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Terrain::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'lands',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Terrain::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'lands',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Terrain::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'lands',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Terrain::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'lands',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Terrain::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'lands',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),











                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);


                break;







            case 'villas':



                        $listingcategory = Villa::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,

                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,

                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'rooms' => $listingcategory->rooms,
                                        'living_rooms' => $listingcategory->living_rooms,
                                        'bedrooms' => $listingcategory->bedrooms,
                                        'bathrooms' => $listingcategory->bathrooms,
                                        'view' => $listingcategory->view,
                                        'security_system' => $listingcategory->security_system,
                                        'facilities' => $listingcategory->facilities,
                                        'amenities' => $listingcategory->amenities,
                                        'services' => $listingcategory->services,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Villasimg::where('villa_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place





                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),






                                    'recentlistings' => Villa::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'villas',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Villa::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'villas',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Villa::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'villas',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Villa::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'villas',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Villa::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'villas',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Villa::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'villas',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Villa::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'villas',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Villa::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'villas',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Villa::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'villas',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Villa::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'villas',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Villa::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'villas',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),










                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);



                break;






            case 'activities':


                        $listingcategory = Activity::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'type' => $listingcategory->type,
                                        'equipment' => $listingcategory->equipment,
                                        'age_requirement' => $listingcategory->age_requirement,
                                        'duration' => $listingcategory->duration,
                                        'language' => $listingcategory->language,
                                        'cancellation' => $listingcategory->cancellation,
                                        'safety_equipment' => $listingcategory->safety_equipment,
                                        'monitor' => $listingcategory->monitor,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Activitiesimg::where('activity_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place




                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),





                                    'recentlistings' => Activity::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,

                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'activities',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Activity::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'activities',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Activity::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'activities',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Activity::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'activities',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Activity::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'activities',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Activity::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'activities',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Activity::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'activities',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Activity::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'activities',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Activity::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'activities',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Activity::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'activities',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Activity::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'activities',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),












                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);




                break;






            case 'books':


                        $listingcategory = Livre::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'genre' => $listingcategory->genre,
                                        'type' => $listingcategory->type,
                                        'language' => $listingcategory->language,
                                        'format' => $listingcategory->format,
                                        'duration' => $listingcategory->duration,
                                        'more_details' => $listingcategory->more_details,

                                    ],



                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Livresimg::where('livre_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place




                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),






                                    'recentlistings' => Livre::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'books',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Livre::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews



                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'books',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Livre::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'books',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Livre::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'books',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Livre::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'books',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Livre::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'books',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Livre::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'books',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Livre::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'books',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Livre::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'books',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Livre::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'books',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Livre::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'books',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),








                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);



                break;






            case 'musical':




                        $listingcategory = Musical::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'music_type' => $listingcategory->music_type,
                                        'material' => $listingcategory->material,
                                        'style' => $listingcategory->style,
                                        'finish_type' => $listingcategory->finish_type,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Musicalsimg::where('musical_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place



                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),






                                    'recentlistings' => Musical::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,

                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'musical',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Musical::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'musical',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Musical::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'musical',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Musical::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'musical',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Musical::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'musical',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Musical::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'musical',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Musical::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'musical',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Musical::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'musical',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Musical::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'musical',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Musical::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'musical',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Musical::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'musical',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),







                                ],

                        ];

                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);



                break;






            case 'furniture':


                        $listingcategory = Furniture::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,


                                    'specifications' => [
                                        'furniture_type' => $listingcategory->furniture_type,
                                        'material' => $listingcategory->material,
                                        'shape' => $listingcategory->shape,
                                        'cushion_thickness' => $listingcategory->cushion_thickness,
                                        'capacity' => $listingcategory->capacity,
                                        'fill_material' => $listingcategory->fill_material,
                                        'condition' => $listingcategory->condition,
                                        'color' => $listingcategory->color,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Furnituresimg::where('furniture_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place



                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),






                                    'recentlistings' => Furniture::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,

                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'furniture',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Furniture::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'furniture',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Furniture::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'furniture',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Furniture::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'furniture',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Furniture::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'furniture',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Furniture::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'furniture',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Furniture::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'furniture',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Furniture::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'furniture',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Furniture::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'furniture',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Furniture::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'furniture',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Furniture::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'furniture',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),











                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);




                break;






            case 'home-appliances':

                        $listingcategory = Houseappliance::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'access_location' => $listingcategory->access_location,
                                        'finish_type' => $listingcategory->finish_type,
                                        'cycle_options' => $listingcategory->cycle_options,
                                        'inlet_water' => $listingcategory->inlet_water,
                                        'installation_method' => $listingcategory->installation_method,
                                        'components' => $listingcategory->components,
                                        'control_type' => $listingcategory->control_type,
                                        'certification' => $listingcategory->certification,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Houseappliancesimg::where('houseappliance_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place






                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),





                                    'recentlistings' => Houseappliance::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,

                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'home-appliances',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Houseappliance::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'home-appliances',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Houseappliance::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'home-appliances',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Houseappliance::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'home-appliances',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Houseappliance::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'home-appliances',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Houseappliance::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'home-appliances',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Houseappliance::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'home-appliances',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Houseappliance::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'home-appliances',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Houseappliance::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'home-appliances',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Houseappliance::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'home-appliances',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Houseappliance::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'home-appliances',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),










                                ],

                        ];

                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);


                break;






            case 'electrical-tools':




                        $listingcategory = Electricaltool::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'tool_type' => $listingcategory->tool_type,
                                        'condition' => $listingcategory->condition,
                                        'voltage' => $listingcategory->voltage,
                                        'amperage' => $listingcategory->amperage,
                                        'cord_length' => $listingcategory->cord_length,
                                        'battery_life' => $listingcategory->battery_life,
                                        'display' => $listingcategory->display,
                                        'frequency' => $listingcategory->frequency,
                                        'temperature' => $listingcategory->temperature,
                                        'voltage_sensing_ranges' => $listingcategory->voltage_sensing_ranges,
                                        'detector' => $listingcategory->detector,
                                        'operating_altitude' => $listingcategory->operating_altitude,
                                        'compatible' => $listingcategory->compatible,
                                        'bending_angle' => $listingcategory->bending_angle,
                                        'accessories' => $listingcategory->accessories,
                                        'style' => $listingcategory->style,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Electricaltoolsimg::where('Electricaltool_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place



                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),







                                    'recentlistings' => Electricaltool::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'electrical-tools',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Electricaltool::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'electrical-tools',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Electricaltool::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'electrical-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Electricaltool::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'electrical-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Electricaltool::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'electrical-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Electricaltool::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'electrical-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Electricaltool::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'electrical-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Electricaltool::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'electrical-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Electricaltool::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'electrical-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Electricaltool::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'electrical-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Electricaltool::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'electrical-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),











                                ],

                        ];

                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);




                break;






            case 'ladders':



                        $listingcategory = Ladder::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,


                                    'specifications' => [
                                        'tool_type' => $listingcategory->tool_type,
                                        'condition' => $listingcategory->condition,
                                        'power_source' => $listingcategory->power_source,
                                        'material' => $listingcategory->material,
                                        'height' => $listingcategory->height,
                                        'weight' => $listingcategory->weight,
                                        'number_of_steps' => $listingcategory->number_of_steps,
                                        'load_capacity' => $listingcategory->load_capacity,
                                        'battery_life' => $listingcategory->battery_life,
                                        'style' => $listingcategory->style,
                                        'wheel_size' => $listingcategory->wheel_size,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Laddersimg::where('ladder_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place




                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),





                                    'recentlistings' => Ladder::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'ladders',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),

                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Ladder::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews



                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'category' => 'ladders',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Ladder::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'ladders',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Ladder::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'ladders',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Ladder::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'ladders',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Ladder::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'ladders',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Ladder::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'ladders',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Ladder::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'ladders',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Ladder::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'ladders',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Ladder::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'ladders',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Ladder::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'ladders',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),










                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);


                break;






            case 'mechanical-tools':



                        $listingcategory = Mechanicaltool::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'tool_type' => $listingcategory->tool_type,
                                        'condition' => $listingcategory->condition,
                                        'power_source' => $listingcategory->power_source,
                                        'voltage' => $listingcategory->voltage,
                                        'battery_life' => $listingcategory->battery_life,
                                        'blade_diameter' => $listingcategory->blade_diameter,
                                        'material' => $listingcategory->material,
                                        'style' => $listingcategory->style,
                                        'cutting_width' => $listingcategory->cutting_width,
                                        'carburetor_type' => $listingcategory->carburetor_type,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Mechanicaltoolsimg::where('mechanicaltool_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place




                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),





                                    'recentlistings' => Mechanicaltool::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'mechanical-tools',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,


                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Mechanicaltool::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews



                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'category' => 'mechanical-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Mechanicaltool::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'mechanical-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Mechanicaltool::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'mechanical-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Mechanicaltool::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'mechanical-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Mechanicaltool::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'mechanical-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Mechanicaltool::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'mechanical-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Mechanicaltool::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'mechanical-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Mechanicaltool::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'mechanical-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Mechanicaltool::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'mechanical-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Mechanicaltool::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'mechanical-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),










                                ],

                        ];

                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);




                break;





            case 'power-tools':



                        $listingcategory = Powertool::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();


                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,


                                    'specifications' => [
                                        'tool_type' => $listingcategory->tool_type,
                                        'condition' => $listingcategory->condition,
                                        'power_source' => $listingcategory->power_source,
                                        'voltage' => $listingcategory->voltage,
                                        'battery_life' => $listingcategory->battery_life,
                                        'material' => $listingcategory->material,
                                        'noise_level' => $listingcategory->noise_level,
                                        'grit_number' => $listingcategory->grit_number,
                                        'rotational_speed' => $listingcategory->rotational_speed,
                                        'blade_material' => $listingcategory->blade_material,
                                        'surface' => $listingcategory->surface,
                                        'style' => $listingcategory->style,
                                        'amperage' => $listingcategory->amperage,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Powertoolsimg::where('powertool_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place



                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),






                                    'recentlistings' => Powertool::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'power-tools',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Powertool::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews



                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'power-tools',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Powertool::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'power-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Powertool::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'power-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Powertool::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'power-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Powertool::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'power-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Powertool::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'power-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Powertool::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'power-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Powertool::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'power-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Powertool::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'power-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Powertool::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'power-tools',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),












                                ],

                        ];

                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);



                break;






            case 'pressure-washers':



                        $listingcategory = Pressurewasher::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,


                                    'specifications' => [
                                        'tool_type' => $listingcategory->tool_type,
                                        'condition' => $listingcategory->condition,
                                        'power_source' => $listingcategory->power_source,
                                        'power_output' => $listingcategory->power_output,
                                        'engine_power' => $listingcategory->engine_power,
                                        'hose_length' => $listingcategory->hose_length,
                                        'cord_length' => $listingcategory->cord_length,
                                        'weight' => $listingcategory->weight,
                                        'maximum_flow_rate' => $listingcategory->maximum_flow_rate,
                                        'specification_met' => $listingcategory->specification_met,
                                        'inlet_connection_type' => $listingcategory->inlet_connection_type,
                                        'outlet_connection_size' => $listingcategory->outlet_connection_size,
                                        'max_working_temperature' => $listingcategory->max_working_temperature,
                                        'connection_type' => $listingcategory->connection_type,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Pressurewashersimg::where('pressurewasher_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place



                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();



                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),






                                    'recentlistings' => Pressurewasher::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,

                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'pressure-washers',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Pressurewasher::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'category' => 'pressure-washers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Pressurewasher::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'pressure-washers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Pressurewasher::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'pressure-washers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Pressurewasher::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'pressure-washers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Pressurewasher::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'pressure-washers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Pressurewasher::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'pressure-washers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Pressurewasher::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'pressure-washers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Pressurewasher::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'pressure-washers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Pressurewasher::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'pressure-washers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Pressurewasher::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'pressure-washers',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),











                                ],

                        ];

                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);



                break;








            case 'boats':


                        $listingcategory = Boat::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,


                                    'specifications' => [
                                        'boat_type' => $listingcategory->boat_type,
                                        'capacity' => $listingcategory->capacity,
                                        'cabins' => $listingcategory->cabins,
                                        'berths_in_cabin' => $listingcategory->berths_in_cabin,
                                        'cruising_time' => $listingcategory->cruising_time,
                                        'length' => $listingcategory->length,
                                        'security' => $listingcategory->security,
                                        'navigation' => $listingcategory->navigation,
                                        'kitchen_equipment' => $listingcategory->kitchen_equipment,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Boatsimg::where('boat_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place




                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),





                                    'recentlistings' => Boat::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,

                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'boats',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Boat::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews



                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'boats',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Boat::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'boats',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Boat::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'boats',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Boat::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'boats',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Boat::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'boats',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Boat::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'boats',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Boat::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'boats',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Boat::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'boats',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Boat::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'boats',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Boat::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'boats',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),










                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);



                break;






            case 'trucks':


                        $listingcategory = Camion::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();


                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'type' => $listingcategory->type,
                                        'fuel_type' => $listingcategory->fuel_type,
                                        'condition' => $listingcategory->condition,
                                        'transmission' => $listingcategory->transmission,
                                        'insurance' => $listingcategory->insurance,
                                        'navigation_system' => $listingcategory->navigation_system,

                                        'more_details' => $listingcategory->more_details,

                                        // Add more specifications as needed
                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Camionsimg::where('camion_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place





                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),





                                    'recentlistings' => Camion::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'trucks',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Camion::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'trucks',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Camion::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'trucks',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Camion::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'trucks',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Camion::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'trucks',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Camion::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'trucks',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Camion::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'trucks',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Camion::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'trucks',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Camion::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'trucks',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Camion::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'trucks',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Camion::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'trucks',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),











                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);



                break;





            case 'caravans':


                        $listingcategory = Caravan::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'gearbox' => $listingcategory->gearbox,
                                        'fuel_type' => $listingcategory->fuel_type,
                                        'kitchen_equipment' => $listingcategory->kitchen_equipment,
                                        'toilet' => $listingcategory->toilet,
                                        'furniture' => $listingcategory->furniture,
                                        'accessories' => $listingcategory->accessories,
                                        'more_details' => $listingcategory->more_details,

                                        // Add more specifications as needed
                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Caravansimg::where('caravan_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place


                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),







                                    'recentlistings' => Caravan::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'caravans',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Caravan::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'caravans',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Caravan::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'caravans',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Caravan::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'caravans',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Caravan::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'caravans',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Caravan::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'caravans',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Caravan::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'caravans',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Caravan::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'caravans',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Caravan::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'caravans',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Caravan::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'caravans',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Caravan::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'caravans',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),










                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);



                break;





            case 'cars':


                        $listingcategory = Car::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,


                                    'specifications' => [
                                        'transmission' => $listingcategory->transmission,
                                        'fuel_type' => $listingcategory->fuel_type,
                                        'number_of_doors' => $listingcategory->number_of_doors,
                                        'condition' => $listingcategory->condition,
                                        'more_details' => $listingcategory->more_details,
                                        'seats' => $listingcategory->seats,
                                        'more_details' => $listingcategory->more_details,


                                        // Add more specifications as needed
                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Carsimg::where('car_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place



                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),







                                    'recentlistings' => Car::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'cars',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Car::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews



                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'cars',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Car::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'cars',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Car::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'cars',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Car::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'cars',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Car::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'cars',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Car::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'cars',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Car::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'cars',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Car::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'cars',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Car::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'cars',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Car::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'cars',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),











                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);




                break;





            case 'engins':



                        $listingcategory = Engin::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,


                                    'specifications' => [
                                        'type' => $listingcategory->type,
                                        'mechanical_condition' => $listingcategory->mechanical_condition,
                                        'transmission' => $listingcategory->transmission,
                                        'cab' => $listingcategory->cab,
                                        'cab_condition' => $listingcategory->cab_condition,
                                        'coupler' => $listingcategory->coupler,
                                        'hydraulics' => $listingcategory->hydraulics,
                                        'seats' => $listingcategory->seats,
                                        'more_details' => $listingcategory->more_details,

                                        // Add more specifications as needed
                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Enginsimg::where('engin_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],

                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place




                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),





                                    'recentlistings' => Engin::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'engins',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Engin::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews



                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'engins',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Engin::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'engins',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Engin::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'engins',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Engin::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'engins',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Engin::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'engins',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Engin::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'engins',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Engin::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'engins',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Engin::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'engins',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Engin::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'engins',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Engin::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'engins',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),











                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);




                break;





            case 'motorcycles':


                        $listingcategory = Moto::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'condition' => $listingcategory->condition,
                                        'gearbox' => $listingcategory->gearbox,
                                        'insurance' => $listingcategory->insurance,
                                        'power' => $listingcategory->power,
                                        'speed' => $listingcategory->speed,
                                        'toolkit' => $listingcategory->toolkit,
                                        'intercom' => $listingcategory->intercom,
                                        'more_details' => $listingcategory->more_details,


                                        // Add more specifications as needed
                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Motosimg::where('moto_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place



                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),






                                    'recentlistings' => Moto::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'motorcycles',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Moto::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews



                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'motorcycles',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Moto::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'motorcycles',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Moto::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'motorcycles',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Moto::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'motorcycles',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Moto::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'motorcycles',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Moto::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'motorcycles',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Moto::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'motorcycles',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Moto::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'motorcycles',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Moto::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'motorcycles',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Moto::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'motorcycles',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),











                                ],

                        ];

                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);





                break;





            case 'scooters':


                        $listingcategory = Scooter::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'condition' => $listingcategory->condition,
                                        'more_details' => $listingcategory->more_details,

                                    ],



                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Scootersimg::where('scooter_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],

                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place


                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),







                                    'recentlistings' => Scooter::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'scooters',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Scooter::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'scooters',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Scooter::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'scooters',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Scooter::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'scooters',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Scooter::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'scooters',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Scooter::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'scooters',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Scooter::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {
                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'scooters',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Scooter::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'scooters',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Scooter::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'scooters',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Scooter::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'scooters',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Scooter::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'scooters',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),









                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);




                break;






            case 'airport-taxis':



                        $listingcategory = Taxiaeroport::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'passengers' => $listingcategory->passengers,
                                        'luggage' => $listingcategory->luggage,
                                        'storage' => $listingcategory->storage,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Taxiaeroportsimg::where('taxiaeroport_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place



                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),







                                    'recentlistings' => Taxiaeroport::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'airport-taxis',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),


                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Taxiaeroport::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'airport-taxis',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Taxiaeroport::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'airport-taxis',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Taxiaeroport::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'airport-taxis',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Taxiaeroport::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'airport-taxis',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Taxiaeroport::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'airport-taxis',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Taxiaeroport::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {
                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'airport-taxis',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Taxiaeroport::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'airport-taxis',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Taxiaeroport::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'airport-taxis',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Taxiaeroport::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'airport-taxis',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Taxiaeroport::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'airport-taxis',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),










                                ],

                        ];

                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);






                break;





            case 'transportation':



                        $listingcategory = Transportation::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,

                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,

                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'passengers' => $listingcategory->passengers,
                                        'luggage' => $listingcategory->luggage,
                                        'condition' => $listingcategory->condition,
                                        'duration' => $listingcategory->duration,
                                        'gearbox' => $listingcategory->gearbox,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Transportationsimg::where('transportation_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place



                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),





                                    'recentlistings' => Transportation::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,

                                                'averageRating' => $averageRating,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'transportation',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),

                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Transportation::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {


                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'transportation',
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Transportation::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'transportation',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Transportation::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'transportation',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Transportation::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'transportation',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Transportation::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'transportation',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Transportation::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'transportation',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Transportation::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'transportation',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Transportation::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'transportation',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Transportation::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'transportation',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Transportation::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'transportation',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),








                                ],

                        ];

                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);




                break;







            case 'bicycles':



                        $listingcategory = Velo::where('url', $url)->first();
                        $reservations = $listingcategory->reservation()->orderBy('reservationstart')->get();
                        $reviewslistings = $listingcategory->review()->orderBy('created_at')->get();
                        $user = User::where('id', $listingcategory->user_id)->first();
                        $sellerlistings = $user->listing()->orderBy('created_at', 'desc')->take(20)->get();

                        $userStore = Onlinestore::where('user_id', $user->id)->first();


                        // Calculate total reviews and average rating
                        $totalReviews = $reviewslistings->count();
                        $averageRating = $totalReviews > 0 ? $reviewslistings->avg('rating') : 0;



                        $listingsData = [

                                'type' => $category,
                                'id' => $listingcategory->id,
                                'attributes' => [
                                    'title' => $listingcategory->title,
                                    'price' => $listingcategory->price,
                                    'description' => $listingcategory->description,
                                    'startdate' => $listingcategory->startdate,
                                    'enddate' => $listingcategory->enddate,
                                    'address' => $listingcategory->address,
                                    'city' => $listingcategory->city,
                                    'phone' => $listingcategory->phone,
                                    'id' => $listingcategory->id,


                                    'picture' => $listingcategory->picture,





                                    'country' => $listingcategory->country,
                                    'zip' => $listingcategory->zip,
                                    'category' => $category,
                                    'url' => $url,

                                    'specifications' => [
                                        'bike_type' => $listingcategory->bike_type,
                                        'seatpost' => $listingcategory->seatpost,
                                        'condition' => $listingcategory->condition,
                                        'storage' => $listingcategory->storage,
                                        'fork' => $listingcategory->fork,
                                        'gear' => $listingcategory->gear,
                                        'more_details' => $listingcategory->more_details,

                                    ],


                                    'created_at' => $listingcategory->created_at,
                                    'reservations' => $reservations->map(function ($reservation) {
                                        return [
                                            'start' => $reservation->reservationstart,
                                            'end' => $reservation->reservationsend,
                                        ];
                                    }),

                                    'reviewslistings' => $reviewslistings->map(function ($review) {

                                        $user = User::find($review->user_id);

                                        return [
                                            'id' => $review->id, // Ensure id is included

                                            'name' => $review->name,
                                            'rating' => $review->rating,
                                            'message' => $review->description,
                                            'helpful' => $review->like,
                                            'profile_image' => $user->profile_image,

                                            'created_at' => $review->created_at->toIso8601String(),


                                            'replies' => $review->reviewreply->map(function ($reply) {

                                                $replyUser = User::find($reply->user_id);

                                            return [
                                                'id' => $reply->id,
                                                'name' => $reply->name,
                                                'picture' => $reply->picture,
                                                'profile_image' => $replyUser->profile_image,
                                                'message' => $reply->message,
                                                'created_at' => $reply->created_at->toIso8601String(),
                                            ];
                                        }),




                                        ];
                                    }),




                                    'images' => Velosimg::where('velo_id', $listingcategory->id)->get()->map(function ($image) {
                                        return [
                                            'picture' => $image->picture,
                                            'alttext' => $image->alttext,
                                        ];
                                    }),

                                    'seller' => [
                                        'name' => $userStore ? $userStore->name : $user->name,
                                        'id' => $user->id,

                                        'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                        'created_at' => $user->created_at->toIso8601String(),
                                        'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                    ],


                                    'total_reviews' => $totalReviews,
                                    'average_rating' => round($averageRating, 1), // Rounded to one decimal place



                                    'sellerlistings' => $sellerlistings->map(function ($listing) {


                                        $images = $listing->listingsimg->map(function ($image) {
                                            return [
                                                'picturesmall' => $image->picturesmall,
                                                'alttext' => $image->alttext,
                                            ];
                                        });

                                            $reviews = $listing->review()->orderBy('created_at')->get(); // Adjust this to use the appropriate relationship
                                            $totalReviews = $reviews->count();
                                            $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Set default to 5 if no reviews

                                            $user = User::where('id', $listing->user_id)->first();

                                            $userStore = Onlinestore::where('user_id', $user->id)->first();




                                            $idResult = $this->getIdOnly($listing);

                                        return [

                                            'type' => 'listings',

                                            'id' => $listing->id, // Ensure id is included

                                            'attributes' => [
                                                'category' => $listing->category,
                                                'title' => $listing->title,
                                                'price' => $listing->price,
                                                'url' => $listing->url,

                                                'created_at' => $listing->created_at,
                                                'city' => $listing->city,

                                                'id' => $idResult['id'],
                                                'phone' => $listing->phone,

                                                'images' => $images,

                                                'status' => $listing->status,
                                                'picture' => $listing->picture,
                                                'user_id' => $listing->user_id,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),
                                                    'url' => $userStore ? $userStore->url : null,  // Add the store URL here

                                                ],

                                            ],


                                        ];
                                    }),






                                    'recentlistings' => Velo::orderBy('created_at', 'desc')->take(10)->get()->map(function ($recentlisting) {

                                        $user = User::where('id', $recentlisting->user_id)->first();
                                        $userStore = Onlinestore::where('user_id', $user->id)->first();

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [

                                            'attributes' => [

                                                'phone' => $recentlisting->phone,
                                                'averageRating' => $averageRating,


                                                'seller' => [
                                                    'name' => $userStore ? $userStore->name : $user->name,
                                                    'id' => $user->id,

                                                    'profile_image' => $userStore ? $userStore->profile_picture : $user->profile_image,

                                                    'created_at' => $user->created_at->toIso8601String(),

                                                ],

                                            'title' => $recentlisting->title,
                                            'price' => $recentlisting->price,
                                            'city' => $recentlisting->city,
                                            'id' => $recentlisting->id,
                                            'category' => 'bicycles',
                                            'url' => $recentlisting->url,
                                            'created_at' => $recentlisting->created_at->toIso8601String(),
                                                                                                                                            'picture' => $recentlisting->picture,



                                            'images' => $recentlisting->servicesimg->map(function ($image) {
                                                return [

                                                    'picturesmall' => $image->picturesmall,
                                                    'alttext' => $image->alttext,
                                                ];
                                            }),

                                            ],

                                        ];
                                    }),


                                    'recentlistingscasablanca' => Velo::where('city', 'Casablanca')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews


                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'bicycles',
                                                'url' => $recentlisting->url,
                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,

                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                            ],
                                        ];
                                    }),

                                    'recentlistingsmarrakech' => Velo::where('city', 'Marrakech')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'bicycles',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingstanger' => Velo::where('city', 'Tanger')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'bicycles',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),




                                    'recentlistingsrabat' => Velo::where('city', 'Rabat')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'bicycles',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsfes' => Velo::where('city', 'Fes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'bicycles',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsagadir' => Velo::where('city', 'Agadir')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'bicycles',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsmeknes' => Velo::where('city', 'Meknes')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'bicycles',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),

                                    'recentlistingsojuda' => Velo::where('city', 'Oujda')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews

                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'bicycles',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),






                                    'recentlistingskenitra' => Velo::where('city', 'Kenitra')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'bicycles',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),
                                    'recentlistingstetouan' => Velo::where('city', 'Tetouan')->orderBy('created_at', 'desc')->take(12)->get()->map(function ($recentlisting) {

                                        $reviews = $recentlisting->review()->orderBy('created_at')->get();
                                        $totalReviews = $reviews->count();
                                        $averageRating = $totalReviews > 0 ? $reviews->avg('rating') : 5; // Default to 5 if no reviews
                                        return [
                                            'attributes' => [
                                                'title' => $recentlisting->title,
                                                'price' => $recentlisting->price,
                                                'city' => $recentlisting->city,
                                                'id' => $recentlisting->id,
                                                'category' => 'bicycles',
                                                'url' => $recentlisting->url,
                                                'created_at' => $recentlisting->created_at->toIso8601String(),
                                                'picture' => $recentlisting->picture,

                                                'averageRating' => $averageRating,
                                                'totalReviews' => $totalReviews,
                                            ],
                                        ];
                                    }),









                                ],

                        ];


                        // Build the response data
                        $responseData = [
                            'data' => $listingsData,
                        ];

                        // Conditionally add 'favorites' if the user is authenticated
                        if (isset($favoriteIds)) {
                            $responseData['favorites'] = $favoriteIds;
                        }

                        // Return the JSON response
                        return response()->json($responseData);


                break;






            default:
                // Default code
                break;
        }








    }






}
